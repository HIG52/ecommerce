server:
  port: 8080

spring:
  application:
    name: hhplus
  profiles:
    active: local, redisson #lettuce
  datasource:
    name: HangHaePlusDataSource
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      maximum-pool-size: 20
      connection-timeout: 10000
      max-lifetime: 60000
    driver-class-name: com.mysql.cj.jdbc.Driver
  logging:
    level:
      level:
        root: DEBUG
        org:
          hibernate:
            orm:
              jdbc:
                binding: TRACE
            SQL: DEBUG
            type:
              descriptor:
                sql:
                  BasicBinder: TRACE
          springframework: DEBUG
    pattern:
      console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
      org:
        hibernate:
          type:
            descriptor:
              sql: trace
  sql:
    init:
      mode: always
      data-locations: classpath:data.sql
  jpa:
    defer-datasource-initialization: true
    open-in-view: false
    generate-ddl: false
    show-sql: true
    hibernate:
      ddl-auto: create
    properties:
      hibernate.timezone.default_storage: NORMALIZE_UTC
      hibernate.jdbc.time_zone: UTC
  kafka:
    # 내부 통신을 위해 kafka 서비스의 내부 리스너 사용 (9092)
    bootstrap-servers: localhost:9094  # 기본값은 그대로 두고, 아래 프로파일에서 덮어씁니다.

---
spring.config.activate.on-profile: local, test

spring:
  datasource:
    # docker-compose 내부 네트워크에서 MySQL 서비스는 "mysql" 이름으로 접근
    url: jdbc:mysql://mysql:3306/hhplus?characterEncoding=UTF-8&serverTimezone=UTC
    username: application
    password: application
  data:
    redis:
      # Redis가 별도로 구성되어 있으면 해당 호스트를 사용하세요.
      # 예: host: host.docker.internal 또는 redis 서비스 이름 (예: redis)
      host: host.docker.internal
      port: 6379
  kafka:
    # docker-compose 내부 네트워크에서 Kafka 서비스는 "kafka" 이름이며, 내부 포트는 9092입니다.
    bootstrap-servers: kafka:9092
    consumer:
      group-id: test-group
      auto-offset-reset: earliest
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
springdoc:
  swagger-ui:
    path: /swagger-index
    disable-swagger-default-url: true

---
spring.config.activate.on-profile: test

spring:
  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: create
    datasource:
      initialization-mode: always
